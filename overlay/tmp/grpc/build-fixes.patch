diff --git a/src/ruby/ext/grpc/extconf.rb b/src/ruby/ext/grpc/extconf.rb
index 8cdd03f297..436234a12b 100644
--- a/src/ruby/ext/grpc/extconf.rb
+++ b/src/ruby/ext/grpc/extconf.rb
@@ -39,12 +39,12 @@ end
 
 ENV['AR'] = 'libtool -o' if RUBY_PLATFORM =~ /darwin/
 
-ENV['EMBED_OPENSSL'] = 'true'
-ENV['EMBED_ZLIB'] = 'true'
-ENV['EMBED_CARES'] = 'true'
+ENV['EMBED_OPENSSL'] = 'false'
+ENV['EMBED_ZLIB'] = 'false'
+ENV['EMBED_CARES'] = 'false'
 ENV['ARCH_FLAGS'] = RbConfig::CONFIG['ARCH_FLAG']
 ENV['ARCH_FLAGS'] = '-arch i386 -arch x86_64' if RUBY_PLATFORM =~ /darwin/
-ENV['CPPFLAGS'] = '-DGPR_BACKWARDS_COMPATIBILITY_MODE'
+ENV['CPPFLAGS'] = "#{ENV['CPPFLAGS']} -DGPR_BACKWARDS_COMPATIBILITY_MODE"
 
 output_dir = File.expand_path(RbConfig::CONFIG['topdir'])
 grpc_lib_dir = File.join(output_dir, 'libs', grpc_config)
@@ -59,6 +59,12 @@ unless windows
   exit 1 unless $? == 0
 end
 
+have_library 'cares'
+have_library 'crypto'
+have_library 'ssl'
+have_library 'z'
+$LIBS << ' -lcares -lcrypto -lssl -lz'
+
 $CFLAGS << ' -I' + File.join(grpc_root, 'include')
 
 ext_export_file = File.join(grpc_root, 'src', 'ruby', 'ext', 'grpc', 'ext-export')
@@ -89,18 +95,3 @@ create_makefile(output)
 
 strip_tool = RbConfig::CONFIG['STRIP']
 strip_tool = 'strip -x' if RUBY_PLATFORM =~ /darwin/
-
-if grpc_config == 'opt'
-  File.open('Makefile.new', 'w') do |o|
-    o.puts 'hijack: all strip'
-    o.puts
-    File.foreach('Makefile') do |i|
-      o.puts i
-    end
-    o.puts
-    o.puts 'strip: $(DLLIB)'
-    o.puts "\t$(ECHO) Stripping $(DLLIB)"
-    o.puts "\t$(Q) #{strip_tool} $(DLLIB)"
-  end
-  File.rename('Makefile.new', 'Makefile')
-end
diff --git a/src/ruby/lib/grpc.rb b/src/ruby/lib/grpc.rb
index e0e1c9cd9b..ad258f14b3 100644
--- a/src/ruby/lib/grpc.rb
+++ b/src/ruby/lib/grpc.rb
@@ -12,7 +12,7 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-ssl_roots_path = File.expand_path('../../../../etc/roots.pem', __FILE__)
+ssl_roots_path = '/etc/ssl/certs/ca-certificates.crt'
 
 require_relative 'grpc/errors'
 require_relative 'grpc/structs'
